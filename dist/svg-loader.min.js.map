{"version":3,"file":"svg-loader.min.js","mappings":"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","sources":["webpack://@localazy/svg-loader/./lib/counter.js","webpack://@localazy/svg-loader/./lib/css-url-fixer.js","webpack://@localazy/svg-loader/./lib/scope-css.js","webpack://@localazy/svg-loader/./lib/storage/index.js","webpack://@localazy/svg-loader/./node_modules/localforage/dist/localforage.js","webpack://@localazy/svg-loader/webpack/bootstrap","webpack://@localazy/svg-loader/webpack/runtime/global","webpack://@localazy/svg-loader/./svg-loader.js"],"sourcesContent":["\"use strict\";\n\nlet counter = 0;\n\nmodule.exports = {\n    incr () {\n        return ++counter;\n    },\n\n    decr () {\n        return --counter;\n    },\n\n    curr () {\n        return counter;\n    }\n};","\"use strict\";\n\n/**\n * Handle all SVG references correctly, which can be\n *   a) via attributes: url(#abc)\n *   b) via tags: <use href=\"#abc\" />\n *   c) via css: .class { fill: url(#abc) }\n * @param {object} idMap: Map previous id with the new unique id\n * @param {string} attributeValueOrCSS\n * @param {string} attributeName\n * @returns attribute or css value with correct id\n */\nmodule.exports = (idMap, attributeValueOrCSS, attributeName = \"\") => {\n    const svgRefRegex = /url\\(['\"]?#([\\w:.-]+)['\"]?\\)/g;\n    const urlRefRegex = /#([\\w:.-]+)/g;\n\n    // fill=\"url(#abc)\" -> fill=\"url(#abc_2)\"\n    // Use the unique IDs created previously\n    if (attributeValueOrCSS.match(svgRefRegex)) {\n        attributeValueOrCSS = attributeValueOrCSS.replace(svgRefRegex, function (g0, g1) {\n            if (!idMap[g1]) {\n                return g0;\n            }\n            return `url(#${idMap[g1]})`;\n        });\n    }\n\n    // <use href=\"#X\" -> <use href=\"#X_23\"\n    // Use the unique IDs created previously\n    if ([\"href\", \"xlink:href\"].includes(attributeName)) {\n        if (attributeValueOrCSS.match(urlRefRegex)) {\n            attributeValueOrCSS = attributeValueOrCSS.replace(urlRefRegex, function (g0, g1) {\n                if (!idMap[g1]) {\n                    return g0;\n                }\n                return `#${idMap[g1]}`;\n            });\n        }\n    }\n    return attributeValueOrCSS;\n};\n","\"use strict\";\n\n// Source: https://github.com/thomaspark/scoper\nmodule.exports = (css, prefix, idMap) => {\n    const re = new RegExp(\"([^\\r\\n,{}]+)(,(?=[^}]*{)|\\s*{)\", \"g\");\n    css = css.replace(re, function (g0, g1, g2) {\n\n        if (g1.match(/^\\s*(@media|@.*keyframes|to|from|@font-face|1?[0-9]?[0-9])/)) {\n            return g1 + g2;\n        }\n\n        const idRegex = /#(\\w+)/;\n        const match = g1.match(idRegex);\n\n        if (match && idMap[match[1]]) {\n            g1 = g1.replace(match[0], `#${idMap[match[1]]}`);\n        }\n\n        g1 = g1.replace(/^(\\s*)/, \"$1\" + prefix + \" \");\n\n        return g1 + g2;\n    });\n\n    return css;\n};","\"use strict\";\nconst localforage = require(\"localforage\");\n\nlet storage = null;\n\nconst getAvailableStorage = async (name) => {\n  localforage.config({ name });\n  storage = localforage;\n  return storage;\n}\n\n\nconst getStorage = async (name) => {\n  return storage || await getAvailableStorage(name)\n}\n\nmodule.exports = {\n  getStorage,\n}","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","\"use strict\";\n\nconst cssScope = require(\"./lib/scope-css\");\nconst cssUrlFixer = require(\"./lib/css-url-fixer\");\nconst counter = require(\"./lib/counter\");\nconst { getStorage } = require(\"./lib/storage\");\n\nconst STORAGE_NAME = \"svg-loader-cache\";\n\n\n\nconst isCacheAvailable = async (url) => {\n  try {\n    const storage = await getStorage(STORAGE_NAME);\n    let item = await storage.getItem(`loader_${url}`);\n\n    if (!item) {\n      return;\n    }\n\n    item = JSON.parse(item);\n\n    if (Date.now() < item.expiry) {\n      return item.data;\n    } else {\n      storage.removeItem(`loader_${url}`);\n      return;\n    }\n  } catch (e) {\n    return;\n  }\n};\n\nconst setCache = async (url, data, cacheOpt) => {\n  try {\n    const storage = await getStorage(STORAGE_NAME);\n    const cacheExp = parseInt(cacheOpt, 10);\n\n    await storage.setItem(\n      `loader_${url}`,\n      JSON.stringify({\n        data,\n        expiry:\n          Date.now() +\n          (Number.isNaN(cacheExp) ? 60 * 60 * 1000 * 24 : cacheExp),\n      })\n    );\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst DOM_EVENTS = [];\nconst getAllEventNames = () => {\n  if (DOM_EVENTS.length) {\n    return DOM_EVENTS;\n  }\n\n  for (const prop in document.head) {\n    if (prop.startsWith(\"on\")) {\n      DOM_EVENTS.push(prop);\n    }\n  }\n\n  return DOM_EVENTS;\n};\n\nconst attributesSet = {};\nconst renderBody = (elem, options, body) => {\n  const { enableJs, disableUniqueIds, disableCssScoping } = options;\n\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(body, \"text/html\");\n  const fragment = doc.querySelector(\"svg\");\n\n  const eventNames = getAllEventNames();\n\n  // When svg-loader is loading in the same element, it's\n  // important to keep track of original properties.\n  const elemAttributesSet =\n    attributesSet[elem.getAttribute(\"data-id\")] || new Set();\n\n  const elemUniqueId =\n    elem.getAttribute(\"data-id\") || `svg-loader_${counter.incr()}`;\n\n  const idMap = {};\n\n  if (!disableUniqueIds) {\n    // Append a unique suffix for every ID so elements don't conflict.\n    Array.from(doc.querySelectorAll(\"[id]\")).forEach((elem) => {\n      const id = elem.getAttribute(\"id\");\n      const newId = `${id}_${counter.incr()}`;\n      elem.setAttribute(\"id\", newId);\n\n      idMap[id] = newId;\n    });\n  }\n\n  Array.from(doc.querySelectorAll(\"*\")).forEach((elem) => {\n    // Unless explicitly set, remove JS code (default)\n    if (elem.tagName === \"script\") {\n      if (!enableJs) {\n        elem.remove();\n        return;\n      } else {\n        const scriptEl = document.createElement(\"script\");\n        scriptEl.innerHTML = elem.innerHTML;\n        document.body.appendChild(scriptEl);\n      }\n    }\n\n    for (let i = 0; i < elem.attributes.length; i++) {\n      const { name, value } = elem.attributes[i];\n\n      const newValue = cssUrlFixer(idMap, value, name);\n\n      if (value !== newValue) {\n        elem.setAttribute(name, newValue);\n      }\n\n      // Remove event functions: onmouseover, onclick ... unless specifically enabled\n      if (eventNames.includes(name.toLowerCase()) && !enableJs) {\n        elem.removeAttribute(name);\n        continue;\n      }\n\n      // Remove \"javascript:...\" unless specifically enabled\n      if (\n        [\"href\", \"xlink:href\"].includes(name) &&\n        value.startsWith(\"javascript\") &&\n        !enableJs\n      ) {\n        elem.removeAttribute(name);\n      }\n    }\n\n    // .first -> [data-id=\"svg_loader_341xx\"] .first\n    // Makes sure that class names don't conflict with each other.\n    if (elem.tagName === \"style\" && !disableCssScoping) {\n      let newValue = cssScope(\n        elem.innerHTML,\n        `[data-id=\"${elemUniqueId}\"]`,\n        idMap\n      );\n      newValue = cssUrlFixer(idMap, newValue);\n      if (newValue !== elem.innerHTML) elem.innerHTML = newValue;\n    }\n  });\n\n  for (let i = 0; i < fragment.attributes.length; i++) {\n    const { name, value } = fragment.attributes[i];\n\n    // Don't override the attributes already defined, but override the ones that\n    // were in the original element\n    if (!elem.getAttribute(name) || elemAttributesSet.has(name)) {\n      elemAttributesSet.add(name);\n      elem.setAttribute(name, value);\n    }\n  }\n\n  attributesSet[elemUniqueId] = elemAttributesSet;\n\n  elem.setAttribute(\"data-id\", elemUniqueId);\n  elem.innerHTML = fragment.innerHTML;\n\n  const event = new CustomEvent(\"iconload\", {\n    bubbles: true,\n  });\n  elem.dispatchEvent(event);\n\n  if (elem.getAttribute(\"oniconload\")) {\n    // Handling (and executing) event attribute for our event (oniconload)\n    // isn't straightforward. Because a) the code is a raw string b) there's\n    // no way to specify the context for execution. So, `this` in the attribute\n    // will point to `window` instead of the element itself.\n    //\n    // Here we are recycling a rarely used GlobalEventHandler 'onloadedmetadata'\n    // and offloading the execution to the browser. This is a hack, but because\n    // the event doesn't bubble, it shouldn't affect anything else in the code.\n    elem.setAttribute(\"onloadedmetadata\", elem.getAttribute(\"oniconload\"));\n\n    const event = new CustomEvent(\"loadedmetadata\", {\n      bubbles: false,\n    });\n    elem.dispatchEvent(event);\n\n    elem.removeAttribute(\"onloadedmetadata\");\n  }\n};\n\nconst requestsInProgress = {};\nconst memoryCache = {};\n\nconst renderIcon = async (elem) => {\n  const src = elem.getAttribute(\"data-src\");\n  const cacheOpt = elem.getAttribute(\"data-cache\");\n\n  const enableJs = elem.getAttribute(\"data-js\") === \"enabled\";\n  const disableUniqueIds = elem.getAttribute(\"data-unique-ids\") === \"disabled\";\n  const disableCssScoping =\n    elem.getAttribute(\"data-css-scoping\") === \"disabled\";\n\n  let lsCache = null;\n  const memCacheHit = memoryCache[src];\n  // if not in memory, request from IndexedDB\n  if (!memCacheHit) {\n    lsCache = await isCacheAvailable(src);\n  }\n  const isCachingEnabled = cacheOpt !== \"disabled\";\n\n  const renderBodyCb = renderBody.bind(self, elem, {\n    enableJs,\n    disableUniqueIds,\n    disableCssScoping,\n  });\n\n  // Memory cache optimizes same icon requested multiple times on the page\n  if (memCacheHit || (isCachingEnabled && lsCache)) {\n    const cache = memCacheHit || lsCache;\n    // store the entry to memory cache if not there yet\n    if (!memCacheHit) {\n      memoryCache[src] = cache;\n    }\n\n    renderBodyCb(cache);\n  } else {\n    // If the same icon is being requested to rendered\n    // avoid firing multiple XHRs\n    if (requestsInProgress[src]) {\n      setTimeout(() => renderIcon(elem), 20);\n      return;\n    }\n\n    requestsInProgress[src] = true;\n\n    fetch(src)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(\n            `Request for '${src}' returned ${response.status} (${response.statusText})`\n          );\n        }\n        return response.text();\n      })\n      .then((body) => {\n        const bodyLower = body.toLowerCase().trim();\n\n        if (!(bodyLower.startsWith(\"<svg\") || bodyLower.startsWith(\"<?xml\"))) {\n          throw Error(`Resource '${src}' returned an invalid SVG file`);\n        }\n\n        if (isCachingEnabled) {\n          setCache(src, body, cacheOpt);\n        }\n\n        memoryCache[src] = body;\n\n        renderBodyCb(body);\n      })\n      .catch((e) => {\n        console.error(e);\n      })\n      .finally(() => {\n        delete requestsInProgress[src];\n      });\n  }\n};\n\nlet intObserver;\nif (globalThis.IntersectionObserver) {\n  intObserver = new IntersectionObserver(\n    (entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          renderIcon(entry.target);\n\n          // Unobserve as soon as soon the icon is rendered\n          intObserver.unobserve(entry.target);\n        }\n      });\n    },\n    {\n      // Keep high root margin because intersection observer\n      // can be slow to react\n      rootMargin: \"1200px\",\n    }\n  );\n}\n\nconst handled = [];\nfunction renderAllSVGs() {\n  if (typeof document === 'undefined') {\n    return\n  }\n  Array.from(document.querySelectorAll(\"svg[data-src]:not([data-id])\")).forEach(\n    (element) => {\n      if (handled.indexOf(element) !== -1) {\n        return;\n      }\n\n      handled.push(element);\n      if (element.getAttribute(\"data-loading\") === \"lazy\") {\n        intObserver.observe(element);\n      } else {\n        renderIcon(element);\n      }\n    }\n  );\n}\n\nlet observerAdded = false;\nconst addObservers = () => {\n  if (observerAdded) {\n    return;\n  }\n\n  observerAdded = true;\n  const observer = new MutationObserver((mutationRecords) => {\n    const shouldTriggerRender = mutationRecords.some((record) =>\n      Array.from(record.addedNodes).some(\n        (elem) =>\n          elem.nodeType === Node.ELEMENT_NODE &&\n          ((elem.getAttribute(\"data-src\") && !elem.getAttribute(\"data-id\")) || // Check if the element needs to be rendered\n            elem.querySelector(\"svg[data-src]:not([data-id])\")) // Check if any of the element's children need to be rendered\n      )\n    );\n\n    // If any node is added, render all new nodes because the nodes that have already\n    // been rendered won't be rendered again.\n    if (shouldTriggerRender) {\n      renderAllSVGs();\n    }\n\n    // If data-src is changed, re-render\n    mutationRecords.forEach((record) => {\n      if (record.type === \"attributes\") {\n        renderIcon(record.target);\n      }\n    });\n  });\n\n  observer.observe(document.documentElement, {\n    attributeFilter: [\"data-src\"],\n    attributes: true,\n    childList: true,\n    subtree: true,\n  });\n};\n\nif (globalThis.addEventListener) {\n  // Start rendering SVGs as soon as possible\n  const intervalCheck = setInterval(() => {\n    renderAllSVGs();\n  }, 100);\n\n  globalThis.addEventListener(\"DOMContentLoaded\", () => {\n    clearInterval(intervalCheck);\n\n    renderAllSVGs();\n    addObservers();\n  });\n}\n"],"names":["counter","module","exports","incr","decr","curr","idMap","attributeValueOrCSS","attributeName","svgRefRegex","urlRefRegex","match","replace","g0","g1","includes","css","prefix","re","RegExp","g2","localforage","storage","getStorage","async","name","config","getAvailableStorage","e","t","n","r","s","o","u","i","f","Error","code","l","call","length","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","push","this","g","self","window","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","result","tryCatch","status","out","prototype","constructor","error","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","outValue","race","response","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","getAllStoreNames","storeNames","item","webSQLStorage","dbInfoPromise","description","size","c","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","globalThis","Function","cssScope","cssUrlFixer","STORAGE_NAME","DOM_EVENTS","attributesSet","renderBody","elem","body","enableJs","disableUniqueIds","disableCssScoping","doc","DOMParser","parseFromString","fragment","querySelector","eventNames","prop","head","startsWith","getAllEventNames","elemAttributesSet","getAttribute","Set","elemUniqueId","from","querySelectorAll","forEach","id","newId","setAttribute","tagName","remove","innerHTML","attributes","newValue","toLowerCase","removeAttribute","has","add","event","CustomEvent","bubbles","dispatchEvent","requestsInProgress","memoryCache","renderIcon","src","cacheOpt","lsCache","memCacheHit","url","Date","now","expiry","isCacheAvailable","isCachingEnabled","renderBodyCb","bind","cache","ok","statusText","text","bodyLower","trim","cacheExp","Number","setCache","catch","finally","intObserver","IntersectionObserver","entries","entry","isIntersecting","unobserve","rootMargin","handled","renderAllSVGs","observerAdded","addEventListener","intervalCheck","setInterval","clearInterval","mutationRecords","some","record","addedNodes","nodeType","Node","ELEMENT_NODE","attributeFilter","childList","subtree"],"sourceRoot":""}